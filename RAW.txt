# Haml and cheese.
So recently I've begun working with a team of web-developers on an application built on Rails.  It's been my first exposure to Rails and Haml.

For those who don't know Haml is a meta-HTML markup language.
It's creators see it as HTML shorthand.
Here's the intro paragraph of the Haml homepage.

"Haml (HTML abstraction markup language) is based on one primary principle: 
markup should be beautiful.
It’s not just beauty for beauty’s sake either;
Haml accelerates and simplifies template creation down to veritable haiku."

So you noticed all of the references to haiku.
Kind of obnoxious right?
Well I think so.
Web page mark-up is not poetry and it never will be.
Mark-up describes content structure.
Poetry IS content.
Whenever a new technology is marketed to you by coopting a somewhat exotic centuries old artform get your guard up.
Usually you're being fed a big ol' heaping spoon of marketing bullshit.

I have to get this off of my chest, web-developers, the majority of our work is the digital equivalent of setting-type and making sure the printing presses are running smoothly.
We aren't Lao-Tzu meditating on how to live harmoniously with the rest of the universe.
Take pride in your work, certainly, but learn some humility please.  Just because some guys got to the game early and made a lot of money doesn't mean we're intellectual gods
I want practical, reliable tools.  Sell me on your code with numbers, units, and realistic examples.
Your career will thank you, and I'll thank you because I won't have the tools of my trade sold to me by appealing to my inner failed artist.


## Marketing bullshit aside...
Here's why Haml is ridiculous fundamentally.
Web browsers render HTML.
They don't render HAML.

The time it will save you typing is negligible once you realize developers don't spend the majority of their time typing.
The majority of our time is spent asking this question, 
"Why is the computer doing this?"

A front-end web developer's primary question is a bit more specific, "Why is the browser making my code look this way?"
Answering that question becomes much more complex with Haml.
Why? 
Because Haml has to be turned into HTML before it can be rendered by a browser.
Does that translation go smoothly?
Sometimes...
But what happens when it doesn't?

Well this happens.
The developer looks at the page and its source in his browser, then he looks at the template in his text-editor and tries to figure out where things have gone wrong.  The more layers of abstraction you add the harder that process becomes.


## HTML isn't beautiful.
So HTML and it's big-brother XML have problems.
They're tag based which means all of your content gets wrapped in opening and closing tag pairs.
If somebody isn't careful they can easily make a mess for themselves by carelessly omitting a tag.
Haml tries to remedy this situation by replacing tag-pairs with strictly enforced whitespace rules. This has precendence, Ruby and Python, for example. The problem with whitespace determining structure is mark-up languages and scripting languages serve very different purposes and are used by different people.

HTML, unfortunately, has a very complex relationship with two other languages, CSS and Javascript.  It's so complex that the lines between these languages frequently blur.  Good developers are like a TV dinner tray and know how to keep each in its proper container but 

## HTML is here to stay.
Until there is an alternative mark-up language rendered by the majority of web-browsers we have to live with HTML.
And since we have to live with HTML people have to learn how to use it responsibly.
Trying to abstract it away adds complexity to the whole process.
You've saved a few seconds in typing but you've added minutes if not hours in troubleshooting.





# Battle Asteroids
All dances and martial-arts can be understood as a sequence of well-rehearsed movements.
To become accomplished one has to repeat these movements thousands of times until they become automatic.
The purpose of Battle Asteroids is to document the world's martial-arts movements in a universally understood visual cartoon language.

## Scenes
Scenes with cartoon characters in martial-arts poses are drawn.
Each scene is an 'asteroid', which in our case is a free floating island composed of fantasy vegetation and architecture which frame or contextualize the martial-art action.
Ideally each asteroid has a theme.
By theme I mean a focus on a particular movement, a useful mental-state, or a well-defined visual aesthetic.

## Character Classes
Characters must belong to a character class.
Great care must be made to design classes that...

1. Are differentiated from all other classes.
2. Are representative enough of the human form to be posed.
3. Just large enough to express individual emotion.

Here's a list of classes.

## Physics
Physics is important.
The characters and environments must respond to forces ( gravity, strikes, environment ) in a way that is caricatured and amusing but still rooted in physical reality.
Effort must be made to show how these forces are coped with by each character.
One way to accomplish this is with tension and compression markers.

[ Sample image here ]

## Animation and subregion dispaly
Scenes are stitched together into one master image.
This master image I'll refer to as 'the poster'.
imgspect is used to select subregions of the poster, sequence them, and caption them.
imgbit is used to display subregions in the desired sequence.

This duo allows for sequences that are animations or Ken Burns pan and scan style slideshows.

[ Sample animation ]
[ Sample slideshow ]

## Color Use
Images should be readable as black and white line drawings.

[ Sample ]

## How to contribute
Read this document in full.
Explore the poster. 
Draw a scene of your own. 
Submit the image.
Our review board will see if it fits our standard of quality and if it does it will be stitched into the existing image at an aesthetically appealing and or logical position.

## Delusions of Grandeur
Hopefully it one day becomes the suprememe visual documention of our world martial-arts heritage.
An image that is joyful, playful, and above all useful to the study of martial-arts.
It's an exploration of time and space as well.
I hope to have subregions printed on wallpaper and stuck to the walls of dojos and practice spaces around the world.





# Image Area / Define Particle Systems / OCR
Big image.
Areas contain like symbols.
Areas are defined creating boundaries like nations on a map.
Objects contained within those boundaries can be animated.
Depending on their shape they become.
	particles in system
	particle, wave/line/curve pairs.
Predefined functions can be written.
Parameters can be set.





# What is Perseids?
One such interface is Perseids, which you can think of as a web interface for Git, with tools designed to make the jobs of philologists, linguists, and historians easier, orbiting around it.

# From Git to Perseids
Perseids is built on top of Sosol and Sosol is built on top of Git.
Sosol ( an acronym for Son of Suda OnLine ) is being developed by Ryan Bauman and Hugh Cayliss at Duke University for papyri.info.
The Perseids team collaborates with them.

Sosol is Git with a web interface ( Ruby on Rails ) along with some code for interacting with common document formats used by Humanities researchers.

Perseids takes the core Sosol functionality and adds some extra tools to for Treebanking, image and text annotation, translation alignments, and image transcription.

## Strengths
Core functionality.
User management and document versioning is strong.
Interoperability with other tools and services.
	Alpheios Treebanking Editor

## Weaknesses
The interface is ugly and sometimes hard to use, but we're working on it.

* Perseids
	* <a href="http://sosol.perseids.org/sosol/">http://sosol.perseids.org/sosol</a>
* Perseids/Sosol source code
	* <a href="https://github.com/sosol/sosol">https://github.com/sosol/sosol</a>
* Imgspect/Imgbit source code
	* <a href="https://github.com/PerseusDL/imgspect">https://github.com/PerseusDL/imgspect</a>

# Plans for the future.
These are my personal plans for Perseids.

1. Improve the existing interface.
2. Create first class tools for...
	 * building image collections.
	 * searching image collections.
	 * transcription and annotation of images.
	 
It talks about version control systems and graph databases primarily, and how they are used in Perseids, software currently being developed by programmers employed by the Perseus Project.





# Research involving images BIG PICTURE
## EXIF - Exchangeable image file format
JEIDA Japan Electronic Industries Development Association developed the Exif standard in 1998
Digital Cameras are storing metadata.

* author
* time
* location
* camera settings
	* make and model
	* aperture
	* shutter speed
	* focal length
	* iso speed
	* metering mode

So basically time, location and technology used in creating the image are now being stored by any image capturing device with GPS attached, which given the popularity of "smart phones" is most image capturing devices.

Which is basically the information museums and archivists gather about images in their collection.

* author
* time
* location
* medium / materials / technology employed





# Research Fundamentals
Collect
Analyze
Categorize
Synthesize
Publish

## Publication
## Who are you talking to?
* Audiences:
	* Colleagues
		* Knows context, will struggle to assimilate new knowledge. 
		* Why? $$$ or ;D for doing so.
		* Do the work to make it accurate.
	* Students
		* Doesn't know context, will struggle to assimilate new knowledge.
		* Why? Hope of $$ or ;) for doing so.
		* Do the work to make it accessible.
	* The Public
		* Doesn't know context, will NOT struggle to assimilate new knowledge.
		* Why? No hope of $ or :) for doing so.
		* Do the work to make it entertaining.

What audience are we trying to reach?
I don't believe that messages need to be dumbed-down to reach a general audience.
They just need context, guidance, and a sense of wonder.
That takes a charismatic content expert.
That takes a Carl Sagan or a Neil Degrasse Tyson, a scientific media-whore, and I mean that lovingly and with respect.





# Software Engineering Wisdom
Put the puzzle pieces together.
One big jigsaw puzzle.
Put the edges together first, because those pieces are the most visible.
APIs must be well defined and documented.

First thing you should ask yourself is what's the easiest way for people to use this.
Occham's razor... always.

When naming things think context.
Keep names short and relevant and context specific.
You know many Johns.
That doesn't mean John is a terrible name and needs to be lengthened to John-From-The-South-Side-Of-Chicago.
You know which John based on context.
This is true for your code.

Human or machine?  Human or machine?
Your audience is both. 

Don't abuse "else if" and "else".
If you are nesting lots of elses know that you could be creating a maintenance nightmare for yourself.
Sure the logic makes sense now when the problem is fresh in your head, but will it make sense weeks from now?





# Practice
Practice slowly and thoughtfully.
Always building on what you already know.
This is how you improve.





# Jokes
It is unwise to half-ass a project just so you can start another project, which you will also half-ass.  
Be patient and use all of your ass.

Civilians. Stop using the word "taskforce".
We already have the word committee.
Discussing dress-code policy is not the same as invading an enemy base.

Why do you hate rich old white guys who run the world solely for their own benefit?  They're people too you know.  Learn some empathy.

Who likes men's sneakers more... young black guys... or cats in heat?  You decide.

Russian dressing is just French dressing with extra mayonnaise and corruption.

Commute to compute!  The battle cry of a generation.

Some people swim for their health. Others for fun. Me? I swim for the used band-aids.

You know you're old when going to a dance club and watching a nature documentary feel like the same activity.

I like algebra because you can think about y's and x's without the painful memories.

A dog is not a human child and should not be dressed like one.





# Victimhood
Welcome to the victimhood, neighbor!  I'd invite you over to my house but it's a mess.  Why is it a mess?  The government.
Welcome to the victimhood, neighbor!  I'd invite you over to my house but it's a mess.  Why is it a mess?  Big business.
Welcome to the victimhood, neighbor!  I'd invite you over to my house but it's a mess.  Why is it a mess?  Men.
Welcome to the victimhood, neighbor!  I'd invite you over to my house but it's a mess.  Why is it a mess?  Gold-digging women.
Yeah it's kind of ridiculous how people will blame everybody else but themselves.
Ehhhh I'm guilty of this.

Seeing yourself as the hapless victim of invisible social forces can make you seem like an insufferable asshole to people who don't share your situation.
Maybe they're right.
Maybe you're right.
It doesn't matter.
So when explaining your position it's best to stay detached and unemotional.
Unshared feelings will only drive people away from your message.





# Periodic Table of Elements
6			-- Atomic Number # equal to the number of protons in nucleus
C			-- Symbol
Carbon		-- Name
12.011		-- Atomic Mass  Weighted average of the masses of all the element's isotopes.

Element -- Stores the information above
Cell	-- Displays the information
Grid	-- WxH Grid
View	-- Arrangement of grids
Canvas	-- XYZ





# Capoeira Lyrics

http://capoeiralyrics.info/Songs/ByArtist/6
http://capoeiralyrics.info/Songs/Details/420#audio





#  Zumbi - Jorge Ben

Angola, Congo, Benguela
Monjolo, Cabinda, Mina
Quiloa, Rebolo

Aqui onde estão os homens
>> Here where the men are

Há um grande leilão
>> There’s a big auction

Dizem que nele há
>> They say that in the auction,

Um princesa à venda
>> There’s  a princess for sale

Que veio junto com seus súditos
>> Who came, together with her subjects

Acorrentados num carro de boi
>> Chained on an oxcart

Eu quero ver
Eu quero ver
Eu quero ver

Angola Congo Benguela
Monjolo Cabinda Mina
Quiloa Rebolo

Aqui onde estão os homens
>> Here where the men are

Dum lado cana de açúcar
>> To one side, sugarcane

Do outro lado o cafezal
>> To the other side, the coffee plantation

Ao centro senhores sentados
>> In the middle, seated gentlemen

Vendo a colheita do algodão tão branco
>> Watching the cotton crop, so white

Sendo colhidos por mãos negras
>> Being picked by black hands

Eu quero ver
Eu quero ver
Eu quero ver

Quando Zumbi chegar
>> When Zumbi arrives

O que vai acontecer
>> What will happen

Zumbi é senhor das guerras
>> Zumbi is a warlord

È senhor das demandas
>> A lord of demands

Quando Zumbi chega e Zumbi
>> When Zumbi arrives, Zumbi

É quem manda
>> Is the one who gives orders

Eu quero ver
Eu quero ver
Eu quero ver





#  Os alquimistas estão chegando -- Jorge Ben

Os alquimistas estão chegando
>> Alchemists are coming

Estão chegando os alquimistas
>> Alchemists are coming

Oh Oh Oh Ohhhhhhhhhh.
Oh Oh Oh Ohhhhhhhhhh.

Ay Ay.
Ay Ay.

Eles são discretos e silenciosos
>> They are discreet and silent

Moram bem longe dos homens
>> They live well away from men

Escolhem com carinho a hora
>> They use their time carefully

E o tempo do seu precioso trabalho
>> And their time is spent doing valuable work

São pacientes, assíduos e perseverantes
>> They are patient, diligent, and persevering

Executam, segundo as regras herméticas
>> Working according to airtight rules

Desde a trituração a fixação
>> Since grinding attachment

A destilação e a coagulação
>> Distilling and coagulating

Trazem consigo cadinhos
>> They bring crucibles

Vasos de vidro, copos de louça
>> Glass vases, and china cups

Todos bem, e iluminados
>> All well and lit

Evitam qualquer relação com
>> Avoid relationships with

Pessoas de temperamento sórdido
>> Nasty tempered people





#  Magnolia -- Jorge Ben

Que eu quero mais?
>> What more do I want?

Se eu sei que a vida bela e linda
>> If I know that life is beautiful and pretty

Que eu quero mais?
>> What more do I want?

Se eu sei que estao de bem com vida
>> If I know to live life well.

Todinho de branco, lindo 
>> Completely white, pretty

Esperando ela chegar
>> I hope to reach her.

Ela chegar
>> Reach her.

Magi
Magi, 
Magi,
Magnólia
Eu disse Magnólia
>> I said Magnolia

Já consultei os astros
>> I have already consulted the stars

Ela chega na primavera
>> She arrives in spring

Ela já se encontra a caminho
>> She is already the path

Voando numa nave maternal dourada
>> Flying the golden mother ship

Linda e veloz feita de um metal miraculoso
>> Beautiful and fast made of miraculous metal

Com janelas de cristal
>> With crystal windows

E forro de veludo rosa
>> And a lining of velvet pink

Rosa
>> Pink





#  Menina mulher da pele preta -- Jorge Ben

Essa menina mulher da pele preta,
>> This girl-woman with black skin.

Dos olhos azuis, do sorriso branco
>> The blue eyes, the white smile.

Não está me deixando dormir sossegado.
>> Is not leaving me to sleep quietly.

Será que ela não sabe que eu fico acordado.
>> She does not know that I am awake.

Pensando nela todo dia, toda hora
>> Thinking about her every day every hour

Passando pela minha janela todo dia, toda hora
>> Passing by my window every day, all the time

Sabendo que eu fico a olhar
>> Knowing that I am looking

com malícia.
>> with malice

A sua pele preta
>> Your black skin

com malícia.
>> with malice

Seus olhos azuis
>> Your blue eyes

com malícia
>> with malice

Seu sorriso branco
>> Your white smile

com malícia.
>> with malice

Seu corpo todo enfim,
>> Finally her whole body

com malícia.
>>  with malice

Com malícia...
>> with malice

Será que quando, eu fico acordado
>> It is when I agree

Pensando nela, ela pensa um pouco em mim?
>> Thinking about her, she thinks a little of me?

Um pouco em mim
>> A little of me

Com malícia.
>> with malice

Um pouco em mim
>> A little of me

Com malícia.
>> with malice

Um...pouco em mim.
>> A little of me

Com malícia.
>> with malice

Essa menina mulher...
>> This girl-woman

Da pele preta
>> with black skin

Não está me deixando...
>> She doesn't leave me

Dormir sossegado.
>> to sleep peacefully

Será que ela não, não, não
>> Will she not, not not

Pensa um pouco em mim, pensa.
>> Think a little of me, think.

Com malícia, com malícia.
>> with malice, with malice

Pouco em mim, Pouco em mim
>> A little of me, A little of me

Pouco em mim, Pouco em mim.
>> A little of me, A little of me

Com malícia, com malícia
>> with malice, with malice

Um pou pou pou pou pouco em mim
>> A li li li li little of me

pouco em mim.
>> a little of me

Com malícia.
>> with malice

Com malícia.
>> with malice

Essa mulher...
>> This woman

Da pele preta
>> with black skin

Da pele preta
>> with black skin

Do sorriso branco,
>> with a white smile

Dos olhos azuis
>> with blue eyes

Não está deixando me...
>> She doesn't leave me...

Dormir sossegado...
>> to sleep peacefully...





# Attitude shift

What is a plant?
It's a green thing that grows in dirt.
It's food.
It's a living thing.
It's a living thing with cell walls made out of cellulose.
It's a living thing that is built the way it is because of billions of years of evolutionary history.
Over that time it has developed certain unique structures and abilities through its constant interaction with surrounding organisms and the overall environment it finds itself.
Contained within its seeds is DNA which is simultaneously a blueprint and a history book.
The two are inseperable.

It's up to me to decide which story I want to tell myself.  The deeper story is the better one to explore.  It makes for a more interesting life for everybody.

If I ever find myself in a job where I'm not allowed to explore the deeper story I'd better leave.
It would be a dead-end.
When curiosity is not driving enterprise and it's individual ambition or greed it's time to boldly hand in a resignation letter and find something else.





# Project Management -- Meeting with Gernot and crew

## Git issue tracking.
Issues are tracked in the issue tracker.
Lots of "micro-commits".
Features should have their own branch.
Feature branches should be rolled into master using pull requests.
When issues are closed they should reference the commit SHA of the pull request merge.

## Documentation.
Function parameters and return values should be documented.
Test suites should be written whenever possible.





# Blue Hills Towing

I had a horrible experience with this company.
They're scammers.
Here's the run-down of their operation.

First of all if you're an individual and not a business you will have to pay for their services in cash.
Demanding payment in cash would be fine if they were selling hot dogs out of a cart on the street, but they aren't.

Their office is in a remote part of Quincy.
Their car storage lot is in Weymouth.
You will have to drive to their office in Quincy to drop off your cash.
Then you will have to drive to Weymouth to get to your car.
They can't accept your cash at the Weymouth lot.
Apparently they can't 'process the payment' of an envelope filled with hundred dollar bills at the Weymouth 'facility'.
How will you do all of this driving when you have no car?
Well you'll have to find a ride or rent one, and you'll have to get this ride on the weekend or during business hours during the week when the office is open.
Chances are this is going to be difficult.
You and maybe your friend will have to take time off work or sacrifice a good chunk of your weekend(s) to deal with them.
They don't care.
They're making 35 dollars every day your car sits in their lot.

Oh yes, if you ask them how much you owe them over the phone they'll give you a number.
When you get to the office that number will be increased a couple of hundred dollars.
Mysterious fees will be added.
When you ask why these fees weren't mentioned over the phone you'll be made to feel like an idiot for not already knowing they exist.
Yes, towing fees apparently exist the same way trees and water exist, and not knowing about them means you're a moron.
"Oh you didn't know there's a ninety dollar pull-out fee.  Sorry it's industry standard."
You'll be fed that line.

If you decide to junk your car with their business partners, Insurance Auto Auctions, you will be told that the process of getting IAA your car will be easy.  They send IAA regular shipments so all you have to do is wait and any additional storage fees will be deducted from what you will be paid for your junked car.  It will be a lie.  They will not take responibility for giving you misinformation and will demand that the storage fees will have to be paid in person before the car can be removed once and for all.  Yes that's right... Paying them with cash in person once isn't good enough.  They will extract MORE money from you by being the business equivalent of an infected cut that won't heal.

If you have to deal with this company it's not going to be by choice.
It's because your car was towed for a parking violation or was in an accident.
You are powerless to pay them without transportation.
They know you probably don't have it, and they capitalize on this.

They're not working for you.
They will hold your car ransom and make it as unpleasant as possible to get it back.
They're basically opportunistic criminals working on the edge of legality, and their operation needs to be shut down.





# More Software Development Wisdom

The wheel most reinvented...
	User Identity Management
	Login credentials
		Facebook and Google provide this service.
		Any "community" needs this.

Data Models
"The heart of any application."
	Back-end
		relational database
		triple-store
		file-system
			versioned files -> GIT
			files
	Middle layer
		API

Always ask yourself...
What is the fundamental unit needed to be stored and manipulated by the data model?





# imgcollect

ActiveRecord for triple-store.
When a parameter is set the triple-store needs to update.

Triplestore | Ruby Class
predicates  |  attribute

Ruby Class becomes the one point of entry...

Collection < ActiveTriple < SPARQL:Client

EXIF data.
Image conversion.





# Bodin stuff

Review and commentary of their work
A way to see own individual work all together.

To ask Stella: "What is all their work?"
What the user interface needs to look like?





# -isms

Communism, socialism, liberalism, convervativism, feudalism...
It's all the same.
"There are pimps and there are hoes." Ice T.
The socially well-connected sell natural resources and the bodies, minds, and time of the less connected.
This is primarily the concern of bankers, brokers, lawyers, and politicians.
This is the game that has been played for millenia now.
This has probably been happening pre-agriculture.
The players of the game get new titles and uniforms.
These titles and uniforms transfer across generations.
Hopefully knowlege that is difficult to acquire is transferred and deepened with each pass.


People organize into groups which require individuals to specialize tasks.
Some tasks are mental, others are physical.
Similar tasks are grouped together.
Regular performance of a task-group is a role.
Role necessity and role-performance quality determines one's status.
Most social-systems create incentives for individuals to increase their status.
Money, uniforms, medals, badges, belts.
	The military
	The boyscouts
	Martial Arts groups
	Academia
It's the foundation of professionalism.
It's our occupations.

I would like to better know how people organize into small social groups.
What's the difference between a cult and a tribe?
When do they become harmful?
When do small social groups become toxic?
How does language factor into the creation of a cult.
Group identity... and motivation.



She moved to the big city.
First time ever really alone.
Running away
Living close to the bone.

Zero to offer
but a body
that knows how to party
La dee doddy

Lost Doctor Daddy at sixteen
Momma was a beauty queen
Can't think just dreams
Of a fantasy future
Filled with shoes babies purses
Maid nanny nurses
And a man who never curses
who'll hide her from the hearses

Her fantasy man makes lots of cheddar
and brings home the bacon
and never complains 'bout his back achin'

But in reality see.
She'll always be an airhead
that shares her bed with gorillas
one who knows how to thrill her.

Her new guy is
A meat-eating mommy needer,
a cock-swinging pussy-pleaser,
a hair-fussing window-gazer,
who wears jeans with a blazer.
Pffffft.

She says they'll find a place 
where the heat is dryer
The clothes are flyer
Maybe LA or Honolulu
Where everybody's chill
And splits the bill fifty-fifty
Will she miss me?

I may be a hater
and a chronic masturbator

Fuck it.
She can rot beach-side
and get swept away at high-tide
From a flower to a raisin
twenty-five til she dies
I'm not buying.
Hell I'm not even trying.

But daddy told me
Life gets hectic
And can makes a man domestic
Your mother, she's the cook
and I keep the books
Our lives aren't exciting truth be told
but if we play it right
we won't starve when we're old.



But uncle
Sorry boss.
You should've played Lacrosse.
You'd be waist deep in pussy.
And never never have to worry 'bout money








# How many projects can you actually juggle at one time?





# Shared Canvas

Here's a video where Shared Canvas is demoed by the project's leader, Rob Sanderson.
https://www.youtube.com/watch?v=Rp-hdYk7Gsg

It's basically an image collection viewer with an annotation interface.
It reminds me of Acrobat Reader a bit.

Its real-life counterpart of would be stacks of photographs placed into a row and covered in cut-up post it notes.
You can move back and forth in the row, pick up a stack, and shuffle through it.

There are annotation tools.
You select areas of interest and then add a title and text comment.
There are three tools for selecting areas... rectangle, ellipse, polygon.
There's a drop-down that let's you decide whether your annotation is a transcription or commentary.
The annotations are at the "stack" level, so if you shuffle throught a photo stack the annotations remain constant.

This makes sense if the photos are all of the same artifact taken under different lighting conditions, which is what I saw in the implementation examples.
	
I found the interface to be really buggy and it has some fundamentally bad design decisions.

	* Menu items jump around and stick around when they're not needed.
	* There's image overlap on multi folio views.
	* Annotation menu appears and disappears if the Window options are changed.
	* Annotation area selector is too opaque to read through easily.

Transcription text is overlayed over the corresponding image areas.
This is actually a feature that is very hard to implement well, which I don't think is really worth it.
	* The benefit is it shows transcribed text in context.
		* There are other ways to do this.
	* The drawback is that it obscures the original image.
		* You can't see the original and the transcription simultaneously.
		 * Hopefully things are correct the first time.
	* I'm not sure how font-size and style are set because I couldn't find any tools for text formatting in the Annotation interface.
		* Computer display fonts are very regular. Fonts etched into stone or written on papyrus aren't, so it's difficult to spatially align things.

So in short it does a lot of things well, but it's buggy.  And unfortunately simple things are buggy which kind of shakes my faith in the project.

Also, I think overlayed transcriptions are fundamentally a poor design choice.  I think the best way to display transcriptions is to show the original area of interest isolated with the transcribed text adjacent to it, and maybe the area of interest highlighted on a scaled down version of the original image nearby.  It's easier to iteratively improve transcriptions when the original is not obscured, and isn't that the whole point of having a "shared canvas" in the first place?

There's a lot of overlap with imgspect, it does some things better and has features I'd like to include with imgspect, but it's buggier.  It's architecture also seems more monolithic.

It seems like the developers are focusing their attention on defining the datamodel.  The latest content I found on the official site were RFC style documents about the datamodel and presentation slides.  Code actually implementing the datamodel is hard to find.  Although there is this...

http://www.shared-canvas.org/tools/#code

There doesn't seem to be a code repository for Shared Canvas.  I can download demo code, but there doesn't seem to be a way to track progress or contribute code back to the project.

The demo code at first glance looks okay.  It's not beautiful but it's not terrible.

Having said all that, some of the content in the example implementations is really really cool.  If you wanted to read Dirac's hand-written dissertation on Quantum Mechanics you can.


## Example implementations
http://www.shared-canvas.org/impl/

## Archimedes text
http://www.shared-canvas.org/impl/demo5/arch.html#!s=0&n=1

	- Shows the photo stack feature

## Paul Dirac example.  
http://www.shared-canvas.org/impl/demo3/#!s=0

## Newspaper
http://www.shared-canvas.org/impl/demo8/1914-01-27.html#!s=0
Overlayed transcriptions.







#  Code Review Notes -- 2014-06-18

## Datatypes

"But back to that method, maybe I am misunderstanding you (and RDF for that matter), but just from a Ruby perspective Fixnum.superclass #=> Integer (Bignum is the other subclass of Integer), so making a distinction between Fixnum and Integer is not really useful. to_f produces a Float, so the terminology you use could be a bit misleading (or, as I said, I am misunderstanding this entirely)."

I misunderstood.
I WAS trying to differentiate between an integer and a float.

Fixnum and Bignum inherit from Integer but I thought it was the reverse.

I thought Fixnum was Ruby's float, and that Integer inherited from Fixnum.
Like the way integers are a subset of the real numbers.

I guess this is what I thought...
	Math: Real( Integer( Whole ) )
	Ruby: Fixnum( Integer( Integer.abs ) )
Naive :)

Oh by the way...
I had to know.  
"Smallest Bignum" == 4611686018427387904 == 2^62

This method was my attempt to map Ruby variable types to RDF datatypes.
It's a fundamental problem I need to solve.
If I can't ensure what goes in comes back out unchanged then this code isn't usable in a production system.
I have to give this problem much more of my attention.
I'm thinking perhaps I should break this functionality out into its own class.



## Case statements and the tripleequals operator

You made this recommendation:

	def data_value(_key, _value)
	  case type?(_key)
	  when ::String  then _value.to_i
	  when ::Integer then _value.to_s
	  when ::Fixnum  then _value.to_f
	  end
	end

I wanted to use a case statement but was running into problems because of ==='s behavior.
=== has some strange behavior when checking class types.

	::String == ::String => true
	::String == String => true
	String == String => true
	
	but 
	
	::String === ::String => false
	::String === String => false
	String === String => false

So I'd have to do a conversion to an actual string or something to use "case" in this instance.
Maybe I'll do that because case statements are so damn readable.



## next_index method

Whoa, thanks for taking apart my next_index method!

"Mind though that this code might contain a lurking bug, I am not sure, haven't tried it out so far. You take only the last char of a string and convert it to an integer (string[-1,1]) What if the index is 10?"

That was a bug.
I guess I was having a bad day.
A completely ridiculous oversight.

I really enjoyed this section of the review.
Seeing someone else refactor your code in stages is extremely helpful.

"This helps me think about reusing code - it's much easier for me to see common abstractions when they are basically already there. Seeing all these small methods from the start also helps me to come up with better design ideas in the end, things I wouldn't have seen otherwise as easily."

I agree with you there.  We have these brains which will find patterns automatically.  All you have to do is give them some input.  Even if that input is there own creation.  The human mind is a strange thing.


Thanks for the style review and for finding that bug.  I learned a lot.  I look forward to the second half :)





# Clitics

enclitics -- a clitic after its host.
proclitic -- a clitic before its host.
mesoclitic
endoclitic

difference between a clitic and an affix
clitic -- a morpheme that has syntactic characteristics of a word but depends phonologically on another word or phrase.
	English possessive 's
		the king of England's horse
	commonly pronouns, determiners, or adpositions




# Tokens

Working on the Bodin project I've had to use CTS subreferences as token ids.
I've come to realize that they're awful as ids.
I've also come to realize that token ids are of the highest importance in our work.
They're like our fundamental particles.

What are CTS subreferences?
    They're the combination of a word and its nth occurence.
    
What are the problems with using them as ids?
    They require static texts
        Typos cannot be corrected without effectively destroying them.
        They're case sensitive.
        New tokens cannot be inserted between existing tokens without potentially destroying their accuracy.
    
What's the solution?
    Forget the text.
    It does not matter.
    Position matters.
    More than that, position in time matters.
    Once the focus is on position we can leverage the power of mathematics to solve some of our identification problems.

Edges of the text are defined as follows
    0 to infinity
    
    "This is a text"
    "[Here] [is] [a] [text]"
    "[1]    [2]  [3] [4]"
    
    "This is a text I changed"
    "[This] [is] [a] [text] [I] [changed]"
    "[1]    [2]  [3] [4]    [5] [6]"
    
    "This is a text I changed"
    "[This] [is] [a] [text] [I] [changed]"
    "[1]    [2]  [3] [4]    [5] [6]"
    
    "This here  is  a   text I    changed"
     [1]  [1.5] [2] [3] [4]  [5]  [6]
     
     "So    this here   is   a      text    I       changed"
     [0.5]  [1]  [1.5]  [2]  [3]    [4]     [5]     [6]
     
     "So    is        this here   a     text    I       changed"
     [0.5]  [2-0.75]  [1]  [1.5]  [3]   [4]     [5]     [6]
     
     "So    --is--      this changed  here   a      text    I"
     [0.5]  [2-0.75-D]  [1]  [6-1.25] [1.5]  [3]    [4]     [5]
     
     "So    --is--      changed  	  this  here   a      text    I"
     [0.5]  [2-0.75-D]  [6-1.25-0.75] [1]   [1.5]  [3]    [4]     [5]
	 
     "So    --is--      --changed--  	this  here   a      text    I"
     [0.5]  [2-0.75-D]  [6-1.25-0.75-D] [1]   [1.5]  [3]    [4]     [5]
	 
     "So    this  here   a      text    I"
     [0.5]  [1]   [1.5]  [3]    [4]     [5]
	 
     "So    this  here   a      text    I"
     [0.5]  [1]   [1.5]  [3]    [4]     [5]
     
	 This might be overkill.



# PotLucky Promo Video Script

Characters
	Gruff-guy : Gruf
	Friendly-host : Host
	Clueless-noob : Noob
	Quiet-guy : Quie

Scene
PokerTable
	Gruf: Buy-in is 20 bucks.
	Noob: Cool cool.
	( Reaches into wallet has no cash )
	Noob: Ummm sorry guys.  Guess I'll have to run to the ATM.
	Gruf: Who comes to a poker game without any cash?  What kind of 



# bitcoind
blockchain
30 GB of data
bitcoind nodes.
	joins the network.
	waits for transactions
	transactions are submitted
		addresses wallets

https://coinbase.com/home
Webapp
	Advantages
		Familiar
	Disadvantages
		Camera
		Authentication

Someone opens up the app
Ante-in
Private key generation
QR code
Workflow questions

Android development Java
Multisync
Multisig
Through the lens of poker




# Snobbery
Exclusionary.
Feining superiority is a weakness.
	Rooted in fear and insecurity.
Being inclusive is harder than being exclusive.
	Requires deeper understanding of human condition.
	
Other side though...
	Some stupid people can have large personalities which dominate a social group,
	dragging everyone else down.




# Hammon Organ notes
Identify your organ: http://www.organservicecompany.com/idorgan.html
Type of organ: Romance Series
	ROMANCE SERIES Organs (122100, 122300,123100, 123200, 123300 (XL), 123400, 124100, 124200, 	
	124300(XL), 124400, 125100, 125200, 125300(XL), 125400, 126100, 126200, 126300




# I built a website for the capoeira group I train with. Capoeira Angola Quintal Boston is a wonderful group of people practicing a beautiful art. Check us out.

caqboston.com

